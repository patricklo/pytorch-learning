spring:
  application:
    name: client-order-amend-api
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/client_orders_db
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    
  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    
  # Redis Configuration for distributed locking
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Logging Configuration
logging:
  level:
    com.example: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Custom Configuration
app:
  lock:
    timeout: 30000  # 30 seconds lock timeout
    retry-interval: 1000  # 1 second retry interval
    max-retries: 3  # Maximum retry attempts 